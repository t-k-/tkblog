	tag:none
==========
For a tree T = (V, E) is not empty, arbitrarily choose a r in V, 
for all (vi) in Vs ={v| {r,v} in E}, i=1,2...n , denote F as the formula-defined form of T with root r:

F =
{
	r if Vs(vi) is empty

	r ∑ Fi
}

Where Fi is the formula-defined form of Ti = (Vi, Ei) with root vi, in which Vi = Union ei in Ei. 

For all path pk in {p| p=vj->r, {vi, r} belongs to p, forall vj in V}
Forall edge e_kl belongs to pk
Ei = U {e_kl} 

Easy to know Ti is a subtree of T. (two vertices connected by unique simple path, Vi ⊆ V, Ei ⊆ E)

==========
A tree Ts = (V, E) is a formula-subtree of a rooted tree T if:
1) Ts is a subtree of T.
2) any leaf in Ts is also a leaf in T.
The set containing all the formula-subtree of T is denoted as fs(T)

==========
Branch word: 
for every pair of vertex {v{i}, v{i+1}} of path p with length n, i = 1, ... n, the sequence of numbers
bar{p} = ⋃  {c(vi) ⋃  c(v{i+1}) }
is defined as the vertex set of path p.

For a rooted tree T, for any pi in sub-path-set(T), i=1,2 ...n , 

Any path in T begins with a leaf and ends with root of T.
And denote B(T) as precisely all the branch words of T.

==========
Define a multi-set of tree C = {T1, T2, .... Tm} as collection. 
Given a collection C, for any path b, define index at b in a given collection C as the set
I(b) = {T | b in B(T), T in C},

==========
Given a tree Tq with B(Tq) = {b1, b2, ... bn}
Define search set of Tq at level l in collection C as:
S_l,C(Tq) = ⋂ _{i=1}^n ⋃_{j=1}^m I(hj ^ bi)
Where hj is a path

